{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","ChangeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCaountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62d07e6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3RWXB\",\"card\":\"Cards_card__jtjm_\",\"infected\":\"Cards_infected__bTDlF\",\"recovered\":\"Cards_recovered__2NWYy\",\"deaths\":\"Cards_deaths__1m2Vk\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData =async (country)=>{\r\n  let ChangeableUrl=url; \r\n\r\nif(country){\r\nChangeableUrl =`${url}/countries/${country}`;\r\n}\r\n\r\n  try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} =await axios.get(ChangeableUrl);\r\n      return{\r\nconfirmed,\r\nrecovered,\r\ndeaths,\r\nlastUpdate,\r\n      }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData =async()=>{\r\n  try {\r\n    const {data} =await axios.get(`${url}/daily`);\r\n    const modifiedData=data.map((dailyData) => ({\r\n      confirmed:dailyData.confirmed.total,\r\n      deaths:dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nexport const fetchCountries=async()=>{\r\n  try {\r\n    const {data:{countries}} =await axios.get(`${url}/countries`);\r\nreturn countries.map((country)=>country.name);\r\n  } catch (error) {\r\n    \r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport{Line ,Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({ data:{confirmed,deaths,recovered} ,country})=>{\r\n    const [dailyData, setDailyData]=useState([]);\r\n    useEffect(()=>{\r\nconst fetchAPI=async()=>{\r\n    setDailyData(await fetchDailyData());\r\n}\r\n\r\nfetchAPI();\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length\r\n        ?(\r\n<Line\r\ndata={{\r\n    labels: dailyData.map(({date}) =>date ),\r\n    datasets: [{\r\ndata: dailyData.map(({confirmed}) => confirmed ),\r\nlabel :'Infected',\r\nborderColor :'#3333ff',\r\nfill: true,\r\n\r\n    },{\r\n        data: dailyData.map(({deaths}) => deaths ),\r\n        label :'Deaths',\r\n        borderColor :'red',\r\n        backgroundColor:'rgba(255,0,0,0.5)',\r\n        fill: true,\r\n    }],\r\n}}\r\n/>):null\r\n    );\r\n\r\nconst barChart=(\r\n    confirmed\r\n    ?(\r\n<Bar\r\ndata={{\r\nlabels:['Infected' ,'Recovered','Deaths'],\r\ndatasets:[{\r\n    label:'People',\r\n    backgroundColor:['rgba(0,0,255,0.5)',\r\n    'rgba(0,255,0,0.5)',\r\n    'rgba(255,0,0,0.5)',\r\n],\r\n    data:[confirmed.value,recovered.value,deaths.value]\r\n}]\r\n}}\r\noptions={{\r\n    legend:{display: false},\r\n    title: {display:true, text:`Current state in ${country}`},\r\n}}\r\n/>\r\n    ):null\r\n)\r\n\r\n    return(\r\n       <div className={styles.container}>\r\n      {country ? barChart :  lineChart}\r\n       </div>\r\n    )\r\n}\r\nexport default Chart;","import React ,{useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl, StylesProvider} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries} from '../../api';\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\nconst[fetchedCountries ,setFetchedCaountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\nconst fetchAPI =async ()=>{\r\nsetFetchedCaountries(await fetchCountries());\r\n}\r\nfetchAPI();\r\n    },[setFetchedCaountries]);\r\n\r\n    return(\r\n     <FormControl className={styles.formControl}>\r\n         <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n             <option value=\"global\">Global</option>\r\n    {fetchedCountries.map((country, i) =><option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n     </FormControl>   \r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport{Cards, Chart , CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport{fetchData} from \"./api\"\r\n\r\nclass App extends React.Component{\r\n    state={\r\ndata:{},\r\ncountry:'',\r\n    }\r\n\r\n   async componentDidMount(){\r\n        const fetchedData= await fetchData();\r\n\r\n     this.setState({data:fetchedData})\r\n    }\r\n\r\n    handleCountryChange=async (country)=>{\r\n//fetch data\r\nconst fetchedData=await fetchData(country);\r\n//set data\r\nthis.setState({data: fetchedData,country:country});\r\n    }\r\n\r\n    render(){\r\n        const {data,country} =this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n            <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n<App />,document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2RAKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4M-qB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MYHM\"};"],"sourceRoot":""}